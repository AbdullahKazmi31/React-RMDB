{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdullahkazmi\\\\Desktop\\\\1.2 React RMDB - Starter files\\\\React RMDB - Starter files_rev7\\\\React RMDB - Start Here\\\\src\\\\components\\\\Movie\\\\Movie.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        if (result.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {\n            //...then fetch actors in the setstate callback function\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\n            fetch(endpoint).then(result => result.json()).then(result => {\n              const directors = result.crew.filter(member => member.job === \"Director\");\n              this.setState({\n                actors: result.cast,\n                directors,\n                loading: false\n              });\n            });\n          });\n        }\n      }).catch(error => console.error('Error: ', error));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); //First fetch the movie\n\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, this.state.movie ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      movie: this.props.location.movieName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MovieInfo, {\n      movie: this.state.movie,\n      directors: this.state.directors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MovieInfoBar, {\n      time: this.state.movie.runtime,\n      budget: this.state.movie.budget,\n      revenue: this.state.movie.revenue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    })) : null, /*#__PURE__*/React.createElement(FourColGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/Abdullahkazmi/Desktop/1.2 React RMDB - Starter files/React RMDB - Starter files_rev7/React RMDB - Start Here/src/components/Movie/Movie.js"],"names":["React","Component","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","movie","actors","directors","loading","fetchItems","endpoint","fetch","then","result","json","status_code","setState","props","match","params","movieId","crew","filter","member","job","cast","catch","error","console","componentDidMount","render","location","movieName","runtime","budget","revenue"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport {API_URL, API_KEY} from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n\r\n    state = {\r\n        movie: null,\r\n        actors:null,\r\n        directors:[],\r\n        loading:false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ loading:true})\r\n        //First fetch the movie\r\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n\r\n            if(result.status_code){\r\n                this.setState({loading: false});\r\n            } else {\r\n                this.setState({movie: result}, () => {\r\n                    //...then fetch actors in the setstate callback function\r\n                    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n                    fetch(endpoint)\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        const directors = result.crew.filter((member) => member.job === \"Director\");\r\n\r\n                        this.setState({\r\n                            actors: result.cast,\r\n                            directors,\r\n                            loading: false,\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        })\r\n        .catch(error => console.error('Error: ',error))\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"rmdb-movie\">\r\n                {this.state.movie ?\r\n                <div>\r\n                <Navigation movie={this.props.location.movieName} />\r\n                <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n                <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n                </div>\r\n                : null }\r\n                <FourColGrid />\r\n                <Spinner />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}